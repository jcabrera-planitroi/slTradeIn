// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using System;
using System.Collections.Generic;
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;

namespace slTradeIn.Data;

public partial class PlanITVisionContext : IdentityDbContext
{
    public PlanITVisionContext(DbContextOptions<PlanITVisionContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Detail_ModelMaster> Detail_ModelMaster { get; set; }

    public virtual DbSet<Detail_ModelMasterPricing> Detail_ModelMasterPricing { get; set; }

    public virtual DbSet<Detail_TTUDesc> Detail_TTUDesc { get; set; }

    public virtual DbSet<Detail_TTU_emailTemplate> Detail_TTU_emailTemplate { get; set; }

    public virtual DbSet<Detail_TTU_partnerLinkIP> Detail_TTU_partnerLinkIP { get; set; }

    public virtual DbSet<Detail_TTU_user> Detail_TTU_user { get; set; }

    public virtual DbSet<Detail_TTU_userCart> Detail_TTU_userCart { get; set; }

    public virtual DbSet<Detail_TTU_userCartDetail> Detail_TTU_userCartDetail { get; set; }

    public virtual DbSet<Detail_TTU_userEmail> Detail_TTU_userEmail { get; set; }

    public virtual DbSet<Detail_TTU_userEmailCampaign> Detail_TTU_userEmailCampaign { get; set; }

    public virtual DbSet<Detail_TTU_userEmailCampaignDetail> Detail_TTU_userEmailCampaignDetail { get; set; }

    public virtual DbSet<Detail_TTU_userLocation> Detail_TTU_userLocation { get; set; }

    public virtual DbSet<Detail_TTU_userManualQuote> Detail_TTU_userManualQuote { get; set; }

    public virtual DbSet<Detail_TTU_userManualQuoteDetail> Detail_TTU_userManualQuoteDetail { get; set; }

    public virtual DbSet<Detail_TTU_userManualQuoteLocation> Detail_TTU_userManualQuoteLocation { get; set; }

    public virtual DbSet<Ref_Cat> Ref_Cat { get; set; }

    public virtual DbSet<Ref_Main> Ref_Main { get; set; }

    public virtual DbSet<vw_TTU_BoxList> vw_TTU_BoxList { get; set; }

    public virtual DbSet<vw_TTU_ManualQuoteList> vw_TTU_ManualQuoteList { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        modelBuilder.Entity<Detail_ModelMaster>(entity =>
        {
            entity.HasKey(e => e.iModelID).HasName("PK__Detail_M__F2E8972C9BB7096B");

            entity.ToTable(tb =>
                {
                    tb.HasTrigger("History_ModelMaster_Delete");
                    tb.HasTrigger("History_ModelMaster_Insert");
                    tb.HasTrigger("History_ModelMaster_Update");
                });

            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
            entity.Property(e => e.dDateUpdated).HasColumnType("datetime");
            entity.Property(e => e.nHeight).HasColumnType("decimal(9, 2)");
            entity.Property(e => e.nLength).HasColumnType("decimal(9, 2)");
            entity.Property(e => e.nWeight).HasColumnType("decimal(9, 2)");
            entity.Property(e => e.nWidth).HasColumnType("decimal(9, 2)");
            entity.Property(e => e.vModelNumber)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.yBGradeMarketplaceFMV).HasColumnType("money");
            entity.Property(e => e.yBGradeRetailFMV).HasColumnType("money");
            entity.Property(e => e.yBGradeWholeSaleFMV).HasColumnType("money");
            entity.Property(e => e.yCGradeMarketplaceFMV).HasColumnType("money");
            entity.Property(e => e.yCGradeRetailFMV).HasColumnType("money");
            entity.Property(e => e.yCGradeWholeSaleFMV).HasColumnType("money");
            entity.Property(e => e.yDGradeWholeSaleFMV).HasColumnType("money");
        });

        modelBuilder.Entity<Detail_ModelMasterPricing>(entity =>
        {
            entity.HasKey(e => e.iModelPricingID);

            entity.Property(e => e.iModelPricingID)
                .ValueGeneratedOnAdd()
                .HasColumnType("numeric(18, 0)");
            entity.Property(e => e.MPATID).HasColumnType("numeric(18, 0)");
            entity.Property(e => e.dAUEDate).HasColumnType("date");
            entity.Property(e => e.dDateImported).HasColumnType("datetime");
            entity.Property(e => e.mPrice_MarketRetail_B).HasColumnType("money");
            entity.Property(e => e.mPrice_MarketRetail_C).HasColumnType("money");
            entity.Property(e => e.mPrice_TradeIn_B).HasColumnType("money");
            entity.Property(e => e.mPrice_TradeIn_C).HasColumnType("money");
            entity.Property(e => e.mPrice_TradeIn_D).HasColumnType("money");
            entity.Property(e => e.mPrice_Wholesale).HasColumnType("money");
            entity.Property(e => e.vDatasource)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.vDescription)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.vListName)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vPartNumber)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vProcessorModel)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vProcessorNumber)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vSKU)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vTitle)
                .HasMaxLength(1000)
                .IsUnicode(false);

            entity.HasOne(d => d.iModel).WithMany(p => p.Detail_ModelMasterPricing)
                .HasForeignKey(d => d.iModelID)
                .OnDelete(DeleteBehavior.ClientSetNull)
                .HasConstraintName("FK_Detail_ModelMasterPricing_Detail_ModelMaster");
        });

        modelBuilder.Entity<Detail_TTUDesc>(entity =>
        {
            entity.HasKey(e => e.iJobID).HasName("PK_Detail_TTUMath");

            entity.Property(e => e.iJobID).ValueGeneratedNever();
            entity.Property(e => e.vAppleiCloudLock).HasColumnType("text");
            entity.Property(e => e.vAuditIncludes).HasColumnType("text");
            entity.Property(e => e.vDataErasure).HasColumnType("text");
            entity.Property(e => e.vLogisticsTransportation).HasColumnType("text");
            entity.Property(e => e.vPayment).HasColumnType("text");
            entity.Property(e => e.vProductEligibility).HasColumnType("text");
            entity.Property(e => e.vProductGradingB).HasColumnType("text");
            entity.Property(e => e.vProductGradingC).HasColumnType("text");
            entity.Property(e => e.vProductGradingD).HasColumnType("text");
            entity.Property(e => e.vRecycling).HasColumnType("text");
            entity.Property(e => e.vReportingSettlement).HasColumnType("text");
            entity.Property(e => e.vSpecialPackaging).HasColumnType("text");
        });

        modelBuilder.Entity<Detail_TTU_emailTemplate>(entity =>
        {
            entity.HasKey(e => e.iEmailTemplateID);

            entity.Property(e => e.dCreatedDate).HasColumnType("datetime");
            entity.Property(e => e.dInactiveDate).HasColumnType("datetime");
            entity.Property(e => e.dUpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.vHTMLBody)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.vSubject)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vTemplateName)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_partnerLinkIP>(entity =>
        {
            entity.HasKey(e => e.iIPPartnerCode).HasName("PK_Detail_TTU_IPPartnerLink");

            entity.Property(e => e.dCreatedDate).HasColumnType("datetime");
            entity.Property(e => e.dInactiveDate).HasColumnType("datetime");
            entity.Property(e => e.vIP)
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_user>(entity =>
        {
            entity.HasKey(e => e.iUserID);

            entity.Property(e => e.dDateCreation).HasColumnType("datetime");
            entity.Property(e => e.vCellphone)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.vCompanyName)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vEmail)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vExtension)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.vFirstName)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vIPCreation)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vLastName)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vOfficePhone)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.vPassword)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vTitle)
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userCart>(entity =>
        {
            entity.HasKey(e => e.iCartID).HasName("PK_Detail_TTU_userCartPreference_1");

            entity.Property(e => e.bDateSigned).HasColumnType("datetime");
            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
            entity.Property(e => e.iQuoteNumber).HasDefaultValueSql("((1))");
            entity.Property(e => e.mTotal).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.mTotalDOD).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.mTotalPayout).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.mTotalSerializedReport).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.mTotalShipping).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.vImageName)
                .HasMaxLength(200)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userCartDetail>(entity =>
        {
            entity.HasKey(e => e.iCartDetailID).HasName("PK_Detail_TTU_userCart");

            entity.Property(e => e.mPrice).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.mTotal).HasColumnType("numeric(18, 2)");
            entity.Property(e => e.vGrade)
                .IsRequired()
                .HasMaxLength(1)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userEmail>(entity =>
        {
            entity.HasKey(e => e.iEmailID);

            entity.Property(e => e.dCreatedDate).HasColumnType("datetime");
            entity.Property(e => e.dUpdatedDate).HasColumnType("datetime");
            entity.Property(e => e.vEmail)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vEmailGroup)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vName)
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userEmailCampaign>(entity =>
        {
            entity.HasKey(e => e.iEmailCampaingID);

            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
            entity.Property(e => e.vHTMLBody)
                .IsRequired()
                .IsUnicode(false);
            entity.Property(e => e.vName)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vSubject)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userEmailCampaignDetail>(entity =>
        {
            entity.HasKey(e => e.iEmailCampaingDetailID);

            entity.Property(e => e.vEmailGroup)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userLocation>(entity =>
        {
            entity.HasKey(e => e.iLogisticID);

            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
            entity.Property(e => e.vCity)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vIPCreated)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.vLocationContactPerson)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vLocationEmail)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vLocationLabel)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vLocationStreetAddress)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vPostalCode)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.vState)
                .IsRequired()
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.vSuiteAppt)
                .IsRequired()
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userManualQuote>(entity =>
        {
            entity.HasKey(e => e.iManualQuoteID);

            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
            entity.Property(e => e.dSignDate).HasColumnType("datetime");
        });

        modelBuilder.Entity<Detail_TTU_userManualQuoteDetail>(entity =>
        {
            entity.HasKey(e => e.iManualQuoteDetID);

            entity.Property(e => e.vHDD)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.vManufacturer)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.vModelNumber)
                .IsRequired()
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.vProcessor)
                .HasMaxLength(1000)
                .IsUnicode(false);
            entity.Property(e => e.vRam)
                .HasMaxLength(100)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Detail_TTU_userManualQuoteLocation>(entity =>
        {
            entity.HasKey(e => e.iManualQuoteLocID);
        });

        modelBuilder.Entity<Ref_Cat>(entity =>
        {
            entity.HasKey(e => e.iCatID).HasName("PK_ref_Cat");

            entity.HasIndex(e => e.vCatDescription, "unq_vCatDescription").IsUnique();

            entity.Property(e => e.cCatActive)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.vCatDescription)
                .IsRequired()
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.vCategoryType)
                .HasMaxLength(10)
                .IsUnicode(false);
            entity.Property(e => e.vProductCode)
                .HasMaxLength(3)
                .IsUnicode(false);
        });

        modelBuilder.Entity<Ref_Main>(entity =>
        {
            entity.HasKey(e => e.iRefMainID);

            entity.HasIndex(e => new { e.iRefMainID, e.vReferenceID, e.vDescription }, "_dta_index_Ref_Main_7_1896393825__K1_K2_K3").HasFillFactor(80);

            entity.HasIndex(e => new { e.vReferenceID, e.vDescription, e.iRefMainID }, "_dta_index_Ref_Main_7_1896393825__K2_K3_K1").HasFillFactor(80);

            entity.HasIndex(e => new { e.vReferenceID, e.vDescription, e.vReferenceIDGroup }, "unq_RefMain").IsUnique();

            entity.Property(e => e.bIsApproved)
                .IsRequired()
                .HasDefaultValueSql("((1))");
            entity.Property(e => e.cRefMainActive)
                .HasMaxLength(1)
                .IsUnicode(false)
                .IsFixedLength();
            entity.Property(e => e.dApprovedOn).HasColumnType("datetime");
            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
            entity.Property(e => e.vApprovedBy)
                .HasMaxLength(100)
                .IsUnicode(false)
                .HasDefaultValueSql("('Initial Script')");
            entity.Property(e => e.vCreatedBy)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.vCulture)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.vDescription)
                .IsRequired()
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.vRef1)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.vRef2)
                .HasMaxLength(20)
                .IsUnicode(false);
            entity.Property(e => e.vReferenceArea)
                .HasMaxLength(50)
                .IsUnicode(false);
            entity.Property(e => e.vReferenceID)
                .IsRequired()
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.vReferenceIDGroup)
                .HasMaxLength(75)
                .IsUnicode(false);
            entity.Property(e => e.vTagHelp)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.vTagValue)
                .HasMaxLength(50)
                .IsUnicode(false);
        });

        modelBuilder.Entity<vw_TTU_BoxList>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_TTU_BoxList");

            entity.Property(e => e.QuoteStatus)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
            entity.Property(e => e.vLocationContactPerson)
                .HasMaxLength(500)
                .IsUnicode(false);
            entity.Property(e => e.vLocationLabel)
                .HasMaxLength(500)
                .IsUnicode(false);
        });

        modelBuilder.Entity<vw_TTU_ManualQuoteList>(entity =>
        {
            entity
                .HasNoKey()
                .ToView("vw_TTU_ManualQuoteList");

            entity.Property(e => e.QuoteStatus)
                .HasMaxLength(100)
                .IsUnicode(false);
            entity.Property(e => e.dDateCreated).HasColumnType("datetime");
        });

        OnModelCreatingPartial(modelBuilder);

        base.OnModelCreating(modelBuilder);

        //Identity Tables Renaming
        modelBuilder.Entity<IdentityUser>().ToTable("Detail_TTU_identityUserAuth");
        modelBuilder.Entity<IdentityRole>().ToTable("Detail_TTU_identityRoles");
        modelBuilder.Entity<IdentityUserClaim<string>>().ToTable("Detail_TTU_identityUserClaim");
        modelBuilder.Entity<IdentityUserToken<string>>().ToTable("Detail_TTU_identityUserToken");
        modelBuilder.Entity<IdentityUserLogin<string>>().ToTable("Detail_TTU_identityUserLogin");
        modelBuilder.Entity<IdentityRoleClaim<string>>().ToTable("Detail_TTU_identityRoleClaim");
        modelBuilder.Entity<IdentityUserRole<string>>().ToTable("Detail_TTU_identityUserRole");
    }

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}